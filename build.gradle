plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.dolloer'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

bootJar {
    archiveFileName = 'app.jar'  // JAR 파일 이름을 app.jar로 고정
}

repositories {
    mavenCentral()
}

dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    implementation 'org.postgresql:postgresql:42.6.0' // 최신 버전 확인 후 사용

    // JWT
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'


    // JPA (DB 저장 필요하면 사용)
    implementation("org.springframework.boot:spring-boot-starter-data-jpa")


    // Jackson (JSON 파싱)
    implementation("com.fasterxml.jackson.core:jackson-databind")


    // Spring Security
    implementation 'org.springframework.boot:spring-boot-starter-security'

    // 비동기 HTTP 요청용
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'org.jsoup:jsoup:1.17.2'

    implementation 'io.projectreactor.netty:reactor-netty:1.0.24'
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.68.Final:osx-aarch_64'



}

tasks.named('test') {
    useJUnitPlatform()

}
